// +build ignore

// This program generates di/builder.go. It can be invoked by running
// go generate
package main

import (
	"log"
	"os"
	"text/template"
	"time"

	"github.com/kgrunwald/goweb/router"
)

type Template struct {
	Timestamp time.Time
	Routes    []router.Route
}

func main() {
	os.Setenv("CONFIG_DIR", "..")
	f, err := os.Create("builder.go")
	die(err)
	defer f.Close()

	routes := router.LoadYaml()

	template := Template{
		Timestamp: time.Now(),
		Routes:    routes,
	}

	err = packageTemplate.Execute(f, template)
	die(err)
}

func die(err error) {
	if err != nil {
		log.Fatal(err)
	}
}

var packageTemplate = template.Must(template.New("").Parse(`// Code generated by go generate; DO NOT EDIT.
// This file was generated by robots at
// {{ .Timestamp }}
package framework

import (
	"github.com/kgrunwald/goweb/controller"
	"github.com/kgrunwald/goweb/di"
	"github.com/kgrunwald/goweb/ilog"
	"github.com/kgrunwald/goweb/router"
)

func BuildContainer() di.Container {
	c := di.NewContainer()
{{- range .Routes }}
	c.RegisterGroup({{- .Package -}}.New{{- .Controller -}}, di.GroupController)
{{- end }}
	c.Register(ilog.NewLogger)
	c.Register(router.NewRouter)
	c.Register(router.Initialize)
	return c
}
`))
